{"version":3,"file":"AddNewCard-2I31SdEo.js","sources":["../../src/pages/AddNewCard.tsx"],"sourcesContent":["import React, { useState, useEffect, FormEvent } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createCard } from \"../api/cards\";\r\nimport Loader from \"@components/ui/Loader\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\nimport { stripePromise } from \"../lib/stripeClient\";\r\nimport { API_BASE } from \"../config\";\r\n\r\nconst AddNewCardForm: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [cardName, setCardName] = useState<string>(\"\");\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [submitting, setSubmitting] = useState<boolean>(false);\r\n\r\n  // simulate initial loader\r\n  useEffect(() => {\r\n    const t = setTimeout(() => setLoading(false), 500);\r\n    return () => clearTimeout(t);\r\n  }, []);\r\n\r\n  const handleCardNameChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setCardName(e.target.value);\r\n\r\n  const handleSubmit = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSubmitting(true);\r\n\r\n    try {\r\n      // 1) Ensure a Stripe Customer exists (backend creates or returns existing)\r\n      await fetch(`${API_BASE}/api/payments/create-customer`, {\r\n        method: \"POST\",\r\n        credentials: \"include\",\r\n      });\r\n\r\n      if (!stripe || !elements) {\r\n        setError(\"Stripe has not fully loaded. Please try again.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      const cardElement = elements.getElement(CardElement);\r\n      if (!cardElement) {\r\n        setError(\"Card element not found.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // 2) Ask backend to create a SetupIntent\r\n      const setupResp = await fetch(\r\n        `${API_BASE}/api/payments/create-setup-intent`,\r\n        {\r\n          method: \"POST\",\r\n          credentials: \"include\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n      if (!setupResp.ok) {\r\n        const errJson = await setupResp.json();\r\n        throw new Error(\r\n          errJson.error || \"Failed to create SetupIntent on server.\"\r\n        );\r\n      }\r\n      const { clientSecret } = (await setupResp.json()) as {\r\n        clientSecret: string;\r\n      };\r\n\r\n      // 3) Confirm the SetupIntent with Stripe\r\n      const result = await stripe.confirmCardSetup(clientSecret, {\r\n        payment_method: {\r\n          card: cardElement,\r\n          billing_details: { name: cardName },\r\n        },\r\n      });\r\n\r\n      if (result.error || !result.setupIntent) {\r\n        setError(\r\n          result.error?.message || \"Failed to confirm SetupIntent.\"\r\n        );\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      const paymentMethodId = result.setupIntent.payment_method as string;\r\n      if (!paymentMethodId) {\r\n        setError(\"No PaymentMethod returned from Stripe.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // 4) Persist card details in our database\r\n      await createCard({\r\n        paymentMethodId,\r\n        nickName: cardName || null,\r\n      });\r\n\r\n      // 5) Redirect to payment-methods list\r\n      navigate(\"/payment-method\");\r\n    } catch (err: any) {\r\n      console.error(\"AddNewCard error:\", err);\r\n      setError(err.message || \"Failed to save card.\");\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 min-h-screen pb-4\">\r\n      <div className=\"mx-auto max-w-lg px-4\">\r\n        <form\r\n          className=\"bg-blue-800 pt-4 px-4 flex flex-col items-stretch mt-5 rounded-t-3xl h-[calc(100vh-90px)] overflow-y-auto\"\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className=\"relative mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"cardName\"\r\n              autoComplete=\"off\"\r\n              required\r\n              value={cardName}\r\n              onChange={handleCardNameChange}\r\n              placeholder=\" \"\r\n              className=\"peer w-full border border-gray-200 dark:border-gray-700 rounded px-2 py-3 text-base font-medium text-gray-800 dark:text-gray-200 bg-white dark:bg-gray-800\"\r\n            />\r\n            <label\r\n              htmlFor=\"cardName\"\r\n              className=\"absolute top-1/2 left-3 -translate-y-1/2 text-sm text-gray-500 dark:text-gray-400 transition-all peer-focus:-top-2 peer-focus:left-2 peer-focus:text-xs peer-focus:text-gray-800 dark:peer-focus:text-gray-200 peer-valid:-top-2 peer-valid:left-2 peer-valid:text-xs peer-valid:text-gray-800 dark:peer-valid:text-gray-200 bg-white dark:bg-gray-800 px-1\"\r\n            >\r\n              Card Name\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <div className=\"w-full h-16 bg-gray-100 dark:bg-gray-800 border-2 border-gray-200 dark:border-gray-700 rounded-xl px-4 pt-5 text-lg text-gray-800 dark:text-gray-200\">\r\n              <CardElement\r\n                id=\"card-element\"\r\n                options={{\r\n                  style: {\r\n                    base: {\r\n                      fontSize: \"18px\",\r\n                      color: \"#374151\",\r\n                      fontFamily: \"'Satoshi', sans-serif\",\r\n                      \"::placeholder\": { color: \"#6B7280\" },\r\n                    },\r\n                    invalid: { color: \"#FF484D\" },\r\n                  },\r\n                  hidePostalCode: true,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {error && (\r\n            <div\r\n              className=\"text-sm p-2 border border-red-600 rounded bg-red-100 mb-3 text-red-600\"\r\n              role=\"alert\"\r\n              aria-live=\"assertive\"\r\n            >\r\n              {error}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flex flex-col items-center justify-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"fixed bottom-5 left-1/2 transform -translate-x-1/2 w-full max-w-sm bg-blue-100 dark:bg-gray-700 text-blue text-lg font-medium rounded-xl py-4 text-center disabled:opacity-50\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? (\r\n                <>\r\n                  <span\r\n                    className=\"border-2 border-[rgba(255,255,255,0.3)] border-t-white rounded-full w-4 h-4 animate-spin inline-block mr-2 align-middle\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                  Addingâ€¦\r\n                </>\r\n              ) : (\r\n                \"Add My Card\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddNewCard: React.FC = () => (\r\n  <Elements stripe={stripePromise}>\r\n    <AddNewCardForm />\r\n  </Elements>\r\n);\r\n\r\nexport default AddNewCard;\r\n"],"names":["AddNewCardForm","navigate","useNavigate","stripe","useStripe","elements","useElements","loading","setLoading","useState","cardName","setCardName","error","setError","submitting","setSubmitting","useEffect","t","handleCardNameChange","e","handleSubmit","API_BASE","cardElement","CardElement","setupResp","errJson","clientSecret","result","_a","paymentMethodId","createCard","err","jsx","Loader","jsxs","Fragment","AddNewCard","Elements","stripePromise"],"mappings":"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"}