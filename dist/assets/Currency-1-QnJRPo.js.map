{"version":3,"file":"Currency-1-QnJRPo.js","sources":["../../src/pages/Currency.tsx"],"sourcesContent":["// src/pages/Currency.tsx\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Loader from \"@components/ui/Loader\";\r\n\r\ntype CurrencyCode = \"USD\" | \"SAR\" | \"AED\" | \"QAR\" | \"EGP\";\r\n\r\ninterface RateMap {\r\n  [key: string]: number;\r\n}\r\n\r\n// Simulated API call to fetch conversion rate from USD to selected currency\r\nconst fetchRate = async (currency: CurrencyCode): Promise<number> => {\r\n  return new Promise<number>((resolve) =>\r\n    setTimeout(() => {\r\n      // Fake rates for demonstration purposes\r\n      const rates: RateMap = {\r\n        USD: 1,       // USD → USD\r\n        SAR: 3.75,    // USD → SAR\r\n        AED: 3.67,    // USD → AED\r\n        QAR: 3.64,    // USD → QAR\r\n        EGP: 30.90,   // USD → EGP\r\n      };\r\n      resolve(rates[currency] ?? 1);\r\n    }, 700)\r\n  );\r\n};\r\n\r\nconst Currency: React.FC = () => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [selectedCurrency, setSelectedCurrency] = useState<CurrencyCode>(\"USD\");\r\n  const [rate, setRate] = useState<number | null>(null);\r\n  const [fetchError, setFetchError] = useState<string>(\"\");\r\n\r\n  // Fetch the rate whenever selectedCurrency changes\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    setLoading(true);\r\n    setFetchError(\"\");\r\n    fetchRate(selectedCurrency)\r\n      .then((data) => {\r\n        if (isMounted) {\r\n          setRate(data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Failed to fetch rate:\", err);\r\n        if (isMounted) {\r\n          setFetchError(\"Unable to load conversion rate.\");\r\n        }\r\n      })\r\n      .finally(() => {\r\n        if (isMounted) {\r\n          setLoading(false);\r\n        }\r\n      });\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [selectedCurrency]);\r\n\r\n  // Initial delay loader if needed (for mounting)\r\n  useEffect(() => {\r\n    // No-op: main loader is tied to fetching the rate\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loader fullscreen />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 min-h-screen pb-4 flex flex-col\">\r\n      <div className=\"mx-auto max-w-lg px-4\">\r\n        <div className=\"bg-blue-700 mt-5 rounded-t-3xl pt-4 px-4 flex flex-col items-stretch h-[calc(100vh-90px)] overflow-y-auto\">\r\n          {/* Currency Selection */}\r\n          {(\r\n            [\r\n              { code: \"USD\", label: \"USD\" },\r\n              { code: \"SAR\", label: \"SAR\" },\r\n              { code: \"AED\", label: \"AED\" },\r\n              { code: \"QAR\", label: \"QAR\" },\r\n              { code: \"EGP\", label: \"EGP\" },\r\n            ] as { code: CurrencyCode; label: string }[]\r\n          ).map(({ code, label }) => (\r\n            <div\r\n              key={code}\r\n              className=\"peer flex items-center gap-3 rounded border border-gray-200 dark:border-gray-700 p-3 mb-4\"\r\n            >\r\n              <input\r\n                type=\"radio\"\r\n                name=\"currency\"\r\n                id={`currency-${code.toLowerCase()}`}\r\n                className=\"peer sr-only\"\r\n                checked={selectedCurrency === code}\r\n                onChange={() => setSelectedCurrency(code)}\r\n              />\r\n              <label\r\n                htmlFor={`currency-${code.toLowerCase()}`}\r\n                className=\"flex items-center gap-2 cursor-pointer text-gray-900 dark:text-gray-100 text-base font-medium peer-checked:bg-gray-900 dark:peer-checked:bg-gray-100 peer-checked:text-white dark:peer-checked:text-gray-900 peer-checked:rounded p-2 w-full\"\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"24\"\r\n                  height=\"24\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  fill=\"none\"\r\n                  className=\"stroke-current\"\r\n                >\r\n                  <path\r\n                    d=\"M8.5 14.6667C8.5 15.9553 9.54467 17 10.8333 17H13C14.3807 17 15.5 15.8807 15.5 14.5C15.5 13.1193 14.3807 12 13 12H11C9.61929 12 8.5 10.8807 8.5 9.5C8.5 8.11929 9.61929 7 11 7H13.1667C14.4553 7 15.5 8.04467 15.5 9.33333M12 5.5V7M12 17V18.5M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  />\r\n                </svg>\r\n                {label}\r\n              </label>\r\n            </div>\r\n          ))}\r\n\r\n          {/* Conversion Rate Display */}\r\n          <div className=\"mt-4 px-2\">\r\n            <h2 className=\"text-gray-200 dark:text-gray-300 text-xl font-semibold mb-2\">\r\n              USD → {selectedCurrency} Rate\r\n            </h2>\r\n            {fetchError ? (\r\n              <p className=\"text-red-400 text-sm\">{fetchError}</p>\r\n            ) : (\r\n              <p className=\"text-gray-100 dark:text-gray-100 text-lg\">\r\n                {rate !== null ? rate.toFixed(2) : \"N/A\"}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Currency;\r\n"],"names":["fetchRate","currency","resolve","Currency","loading","setLoading","useState","selectedCurrency","setSelectedCurrency","rate","setRate","fetchError","setFetchError","useEffect","isMounted","data","err","jsx","Loader","jsxs","code","label"],"mappings":"iDAYA,MAAMA,EAAY,MAAOC,GAChB,IAAI,QAAiBC,GAC1B,WAAW,IAAM,CASPA,EAPe,CACrB,IAAK,EACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,IACP,EACcD,CAAQ,GAAK,CAAC,CAAA,EAC3B,GAAG,CACR,EAGIE,EAAqB,IAAM,CAC/B,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAkB,EAAI,EAC9C,CAACC,EAAkBC,CAAmB,EAAIF,EAAAA,SAAuB,KAAK,EACtE,CAACG,EAAMC,CAAO,EAAIJ,EAAAA,SAAwB,IAAI,EAC9C,CAACK,EAAYC,CAAa,EAAIN,EAAAA,SAAiB,EAAE,EAkCvD,OA/BAO,EAAAA,UAAU,IAAM,CACd,IAAIC,EAAY,GAChB,OAAAT,EAAW,EAAI,EACfO,EAAc,EAAE,EAChBZ,EAAUO,CAAgB,EACvB,KAAMQ,GAAS,CACVD,GACFJ,EAAQK,CAAI,CACd,CACD,EACA,MAAOC,GAAQ,CACN,QAAA,MAAM,wBAAyBA,CAAG,EACtCF,GACFF,EAAc,iCAAiC,CACjD,CACD,EACA,QAAQ,IAAM,CACTE,GACFT,EAAW,EAAK,CAClB,CACD,EACI,IAAM,CACCS,EAAA,EACd,CAAA,EACC,CAACP,CAAgB,CAAC,EAGrBM,EAAAA,UAAU,IAAM,CAEhB,EAAG,EAAE,EAEDT,EACKa,EAAA,IAACC,EAAO,CAAA,WAAU,EAAC,CAAA,EAI1BD,EAAAA,IAAC,MAAI,CAAA,UAAU,4DACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAE,EAAA,KAAC,MAAI,CAAA,UAAU,4GAGX,SAAA,CAAA,CACE,CAAE,KAAM,MAAO,MAAO,KAAM,EAC5B,CAAE,KAAM,MAAO,MAAO,KAAM,EAC5B,CAAE,KAAM,MAAO,MAAO,KAAM,EAC5B,CAAE,KAAM,MAAO,MAAO,KAAM,EAC5B,CAAE,KAAM,MAAO,MAAO,KAAM,GAE9B,IAAI,CAAC,CAAE,KAAAC,EAAM,MAAAC,CACb,IAAAF,EAAA,KAAC,MAAA,CAEC,UAAU,4FAEV,SAAA,CAAAF,EAAA,IAAC,QAAA,CACC,KAAK,QACL,KAAK,WACL,GAAI,YAAYG,EAAK,YAAa,CAAA,GAClC,UAAU,eACV,QAASb,IAAqBa,EAC9B,SAAU,IAAMZ,EAAoBY,CAAI,CAAA,CAC1C,EACAD,EAAA,KAAC,QAAA,CACC,QAAS,YAAYC,EAAK,YAAa,CAAA,GACvC,UAAU,+OAEV,SAAA,CAAAH,EAAA,IAAC,MAAA,CACC,MAAM,6BACN,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,UAAU,iBAEV,SAAAA,EAAA,IAAC,OAAA,CACC,EAAE,kWACF,YAAY,IACZ,cAAc,QACd,eAAe,OAAA,CAAA,CACjB,CACF,EACCI,CAAA,CAAA,CAAA,CACH,CAAA,EA/BKD,CAAA,CAiCR,EAGDD,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,8DAA8D,SAAA,CAAA,SACnEZ,EAAiB,OAAA,EAC1B,EACCI,EACEM,EAAAA,IAAA,IAAA,CAAE,UAAU,uBAAwB,WAAW,EAEhDA,MAAC,IAAE,CAAA,UAAU,2CACV,SAASR,IAAA,KAAOA,EAAK,QAAQ,CAAC,EAAI,KACrC,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ"}