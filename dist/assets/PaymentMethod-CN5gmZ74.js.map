{"version":3,"file":"PaymentMethod-CN5gmZ74.js","sources":["../../src/pages/PaymentMethod.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { fetchCards } from \"../api/cards\";\r\nimport buttonBack from \"../assets/images/Button-Back.png\";\r\nimport Loader from \"../components/ui/Loader\";\r\nimport {\r\n  StripeElements,\r\n  createPaymentRequest,\r\n  createSetupIntent,\r\n  PaymentRequestButtonElement,\r\n  useStripe,\r\n} from \"../lib/stripeClient\";\r\n\r\ninterface Card {\r\n  id: number;\r\n  network: string | null;\r\n  last4: string;\r\n  isActive: boolean;\r\n}\r\n\r\nimport { API_BASE } from \"../config\";\r\n\r\nconst PaymentMethodForm: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const stripe = useStripe();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [cards, setCards] = useState<Card[]>([]);\r\n  const [fetchError, setFetchError] = useState<string>(\"\");\r\n  const [paymentRequest, setPaymentRequest] = useState<PaymentRequest | null>(null);\r\n  const [canMakePayment, setCanMakePayment] = useState<boolean>(false);\r\n\r\n  // simulate loader\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setLoading(false), 500);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // load saved cards once not loading\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    (async () => {\r\n      try {\r\n        const data = await fetchCards();\r\n        setCards(data);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch saved cards:\", err);\r\n        setFetchError(\"Unable to load saved cards.\");\r\n      }\r\n    })();\r\n  }, [loading]);\r\n\r\n  // initialize PaymentRequest (to save a new card via Apple/Google Pay)\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    (async () => {\r\n      try {\r\n        if (!stripe) return;\r\n        const pr = await createPaymentRequest({\r\n          country: \"US\",\r\n          currency: \"usd\",\r\n          total: { label: \"Save Card\", amount: 0 },\r\n          requestPayerEmail: true,\r\n          requestPayerName: true,\r\n        });\r\n\r\n        pr.on(\"paymentmethod\", async (event: any) => {\r\n          // 1) Ask backend for a SetupIntent clientSecret\r\n          try {\r\n            const clientSecret = await createSetupIntent();\r\n            // 2) Confirm SetupIntent—pass in event.paymentMethod.id\r\n            const { error, setupIntent } = await stripe.confirmCardSetup(\r\n              clientSecret,\r\n              {\r\n                payment_method: event.paymentMethod.id,\r\n              }\r\n            );\r\n            if (error || !setupIntent) {\r\n              event.complete(\"fail\");\r\n              console.error(\"SetupIntent confirmation error:\", error);\r\n              return;\r\n            }\r\n\r\n            // 3) Persist the new card on our server (FIXED URL)\r\n            const pmId = setupIntent.payment_method as string;\r\n            await fetch(`${API_BASE}/api/payments/cards`, {\r\n              method: \"POST\",\r\n              credentials: \"include\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({ paymentMethodId: pmId, nickName: null }),\r\n            });\r\n\r\n            event.complete(\"success\");\r\n            // 4) Refresh local list of cards\r\n            const updated = await fetchCards();\r\n            setCards(updated);\r\n          } catch (err) {\r\n            console.error(\"Error saving card via PaymentRequest:\", err);\r\n            event.complete(\"fail\");\r\n          }\r\n        });\r\n\r\n        if (await pr.canMakePayment()) {\r\n          setPaymentRequest(pr);\r\n          setCanMakePayment(true);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"PaymentRequest init error:\", err);\r\n      }\r\n    })();\r\n  }, [loading, stripe]);\r\n\r\n  const handleBack = () => navigate(-1);\r\n  const handleAddNew = () => navigate(\"/add-new-card\");\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen pb-4 flex flex-col\">\r\n      <div className=\"bg-blue-800 pt-4 pb-8\">\r\n        <div className=\"mx-auto max-w-lg px-4\">\r\n          <header className=\"pt-8 flex items-center px-3\">\r\n            <button onClick={handleBack} className=\"mr-3 p-0\" aria-label=\"Go back\">\r\n              <img\r\n                className=\"inline-block w-8 h-auto\"\r\n                src={buttonBack}\r\n                alt=\"Go Back\"\r\n              />\r\n            </button>\r\n            <h1 className=\"m-0 text-white text-lg font-medium\">Payment Method</h1>\r\n          </header>\r\n\r\n          <div className=\"bg-white pt-4 px-4 flex flex-col items-stretch mt-5 rounded-t-3xl h-[calc(100vh-90px)] overflow-y-auto\">\r\n            {canMakePayment && paymentRequest ? (\r\n              <div className=\"border-b-2 border-gray-200\">\r\n                <PaymentRequestButtonElement\r\n                  options={{ paymentRequest }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"border-b-2 border-gray-200\">\r\n                <p className=\"text-sm text-gray-500 my-4\">\r\n                  Apple Pay / Google Pay currently unavailable\r\n                </p>\r\n                <small className=\"block text-xs text-gray-500 mb-4\">\r\n                  Make sure you’re on a supported browser (Safari for Apple Pay,\r\n                  Chrome for Google Pay), using HTTPS or localhost, and that{\" \"}\r\n                  <code>VITE_STRIPE_PUBLISHABLE_KEY</code> is set.\r\n                </small>\r\n              </div>\r\n            )}\r\n\r\n            {fetchError && (\r\n              <div className=\"text-sm p-2 border border-red-600 rounded text-red-600 bg-red-100 mb-3\">\r\n                {fetchError}\r\n              </div>\r\n            )}\r\n\r\n            {cards.length > 0 ? (\r\n              cards.map((card) => (\r\n                <div key={card.id} className=\"border-b-2 border-gray-200\">\r\n                  <div className=\"flex items-center gap-2 py-4 pr-8 cursor-pointer\">\r\n                    <span className=\"border border-gray-200 px-5 py-2 rounded flex items-center justify-center w-12 h-8\">\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"32\"\r\n                        height=\"20\"\r\n                        viewBox=\"0 0 32 20\"\r\n                        fill=\"none\"\r\n                      >\r\n                        <rect width=\"32\" height=\"20\" rx=\"3\" fill=\"#E0E0E0\" />\r\n                        <text\r\n                          x=\"16\"\r\n                          y=\"13\"\r\n                          textAnchor=\"middle\"\r\n                          fontSize=\"10\"\r\n                          fill=\"#333\"\r\n                        >\r\n                          {card.network}\r\n                        </text>\r\n                      </svg>\r\n                    </span>\r\n                    <div className=\"pl-4\">\r\n                      <div className=\"text-gray-800 text-base font-semibold leading-6\">\r\n                        {card.network}\r\n                      </div>\r\n                      <div className=\"text-gray-500 text-sm font-medium leading-5\">\r\n                        <span className={card.isActive ? \"text-blue-800\" : \"text-red\"}>\r\n                          {card.isActive ? \"Active\" : \"Inactive\"}\r\n                        </span>{\" \"}\r\n                        | Card Number **** {card.last4}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-gray-500 my-3 text-sm\">No saved cards found.</p>\r\n            )}\r\n\r\n            <div className=\"flex flex-col items-center justify-center\">\r\n              <div\r\n                className=\"w-full bg-blue-800 text-white text-lg font-medium rounded-xl py-4 my-4 flex justify-center items-center transition hover:bg-blue-700 cursor-pointer\"\r\n                onClick={handleAddNew}\r\n              >\r\n                Add New Payment\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PaymentMethod: React.FC = () => (\r\n  <StripeElements>\r\n    <PaymentMethodForm />\r\n  </StripeElements>\r\n);\r\n\r\nexport default PaymentMethod;\r\n"],"names":["PaymentMethodForm","navigate","useNavigate","stripe","useStripe","loading","setLoading","useState","cards","setCards","fetchError","setFetchError","paymentRequest","setPaymentRequest","canMakePayment","setCanMakePayment","useEffect","timer","data","fetchCards","err","pr","createPaymentRequest","event","clientSecret","createSetupIntent","error","setupIntent","pmId","API_BASE","updated","handleBack","handleAddNew","jsx","Loader","jsxs","buttonBack","PaymentRequestButtonElement","card","PaymentMethod","StripeElements"],"mappings":"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"}