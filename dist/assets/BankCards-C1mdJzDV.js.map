{"version":3,"file":"BankCards-C1mdJzDV.js","sources":["../../src/pages/BankCards.tsx"],"sourcesContent":["// src/pages/BankCards.tsx\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Loader from \"@components/ui/Loader\";\r\nimport { fetchCards } from \"../api/cards\";\r\n\r\ninterface Card {\r\n  id: number;\r\n  network: string | null;\r\n  last4: string;\r\n  isActive: boolean;\r\n}\r\n\r\nconst BankCards: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [cards, setCards] = useState<Card[]>([]);\r\n  const [fetchError, setFetchError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    async function loadCards() {\r\n      try {\r\n        const fetchedCards = await fetchCards();\r\n        setCards(fetchedCards);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch cards:\", err);\r\n        setFetchError(\"Unable to load saved cards.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    loadCards();\r\n  }, []);\r\n\r\n  if (loading) return <Loader fullscreen />;\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-900 min-h-screen pb-4 flex flex-col\">\r\n      <div className=\"mx-auto max-w-lg px-4\">\r\n        <div className=\"bg-primary pt-4 px-4 flex flex-col items-stretch mt-5 rounded-t-3xl h-[calc(100vh-90px)] overflow-y-auto\">\r\n          {fetchError && (\r\n            <div className=\"text-sm p-2 border border-red-400 rounded bg-red-100 mb-3 text-red-600\">\r\n              {fetchError}\r\n            </div>\r\n          )}\r\n\r\n          {cards.length > 0 ? (\r\n            cards.map((card) => (\r\n              <Link to=\"/add-new-card\" key={card.id}>\r\n                <div className=\"border-b-2 border-gray-200 dark:border-gray-700 px-0\">\r\n                  <div className=\"flex items-center gap-2 py-4 pr-8 cursor-pointer\">\r\n                    <span className=\"w-8 h-8 flex items-center justify-center\">\r\n                      <svg\r\n                        width=\"32\"\r\n                        height=\"32\"\r\n                        className=\"text-blue-500 dark:text-primary\"\r\n                      >\r\n                        <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"currentColor\" />\r\n                      </svg>\r\n                    </span>\r\n                    <div className=\"pl-4\">\r\n                      <div className=\"text-gray-800 dark:text-gray-200 text-base font-semibold leading-6\">\r\n                        {card.network || \"Unknown Network\"}\r\n                      </div>\r\n                      <div className=\"text-gray-500 dark:text-gray-400 text-sm font-medium leading-5\">\r\n                        <span\r\n                          className={\r\n                            card.isActive ? \"text-blue-700\" : \"text-red-600\"\r\n                          }\r\n                        >\r\n                          {card.isActive ? \"Active\" : \"Inactive\"}\r\n                        </span>{\" \"}\r\n                        | Card Number **** {card.last4}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-gray-500 dark:text-gray-400 my-3 text-sm\">\r\n              No saved cards found.\r\n            </p>\r\n          )}\r\n\r\n          <div className=\"flex flex-col items-center justify-center mt-auto\">\r\n            <Link\r\n              to=\"/add-new-card\"\r\n              className=\"fixed bottom-5 left-1/2 transform -translate-x-1/2 w-full max-w-sm bg-blue-100 dark:bg-gray-700 text-blue-700 dark:text-primary text-lg font-medium rounded-xl py-4 text-center hover:bg-blue-200 dark:hover:bg-gray-600\"\r\n            >\r\n              + Link a New Card\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BankCards;\r\n"],"names":["BankCards","useNavigate","loading","setLoading","useState","cards","setCards","fetchError","setFetchError","useEffect","loadCards","fetchedCards","fetchCards","err","jsx","Loader","jsxs","card","Link"],"mappings":"uGAcA,MAAMA,EAAsB,IAAM,CACfC,EAAY,EAC7B,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAkB,EAAI,EAC9C,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAAiB,CAAA,CAAE,EACvC,CAACG,EAAYC,CAAa,EAAIJ,EAAAA,SAAiB,EAAE,EAiBvD,OAfAK,EAAAA,UAAU,IAAM,CACd,eAAeC,GAAY,CACrB,GAAA,CACI,MAAAC,EAAe,MAAMC,EAAW,EACtCN,EAASK,CAAY,QACdE,EAAK,CACJ,QAAA,MAAM,yBAA0BA,CAAG,EAC3CL,EAAc,6BAA6B,CAAA,QAC3C,CACAL,EAAW,EAAK,CAAA,CAClB,CAEQO,EAAA,CACZ,EAAG,EAAE,EAEDR,EAAiBY,EAAA,IAAAC,EAAA,CAAO,WAAU,GAAC,EAGrCD,EAAAA,IAAC,MAAI,CAAA,UAAU,4DACb,SAAAA,EAAAA,IAAC,MAAI,CAAA,UAAU,wBACb,SAAAE,EAAA,KAAC,MAAI,CAAA,UAAU,2GACZ,SAAA,CAAAT,GACEO,EAAA,IAAA,MAAA,CAAI,UAAU,yEACZ,SACHP,EAAA,EAGDF,EAAM,OAAS,EACdA,EAAM,IAAKY,GACRH,MAAAI,EAAA,CAAK,GAAG,gBACP,eAAC,MAAI,CAAA,UAAU,uDACb,SAACF,EAAA,KAAA,MAAA,CAAI,UAAU,mDACb,SAAA,CAACF,EAAAA,IAAA,OAAA,CAAK,UAAU,2CACd,SAAAA,EAAA,IAAC,MAAA,CACC,MAAM,KACN,OAAO,KACP,UAAU,kCAEV,SAAAA,EAAA,IAAC,UAAO,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,KAAK,cAAe,CAAA,CAAA,CAAA,EAEvD,EACAE,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAF,MAAC,MAAI,CAAA,UAAU,qEACZ,SAAAG,EAAK,SAAW,kBACnB,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,iEACb,SAAA,CAAAF,EAAA,IAAC,OAAA,CACC,UACEG,EAAK,SAAW,gBAAkB,eAGnC,SAAAA,EAAK,SAAW,SAAW,UAAA,CAC9B,EAAQ,IAAI,sBACQA,EAAK,KAAA,CAC3B,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CA5B4B,EAAAA,EAAK,EA6BnC,CACD,EAEAH,MAAA,IAAA,CAAE,UAAU,gDAAgD,SAE7D,uBAAA,CAAA,EAGFA,EAAAA,IAAC,MAAI,CAAA,UAAU,oDACb,SAAAA,EAAA,IAACI,EAAA,CACC,GAAG,gBACH,UAAU,2NACX,SAAA,mBAAA,CAAA,CAGH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ"}